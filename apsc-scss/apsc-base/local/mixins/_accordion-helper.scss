// Helpers for configuring accordion component

// Configures the accordion border property
//
@mixin set-accordion-border-color($color-border) {
  &-group {
    border: none;
    border-bottom: 1px solid $color-border;
  }

  &-group:nth-child(1) {
    border-top: 1px solid $color-border;
  }

  &-inner {
    padding: 0 15px;
    border: none; // reset accordion borders
    border-top: 1px solid $color-border;
  }
}

// Configures the accordion-header properties
@mixin set-accordion-header-properties($color-config, $sprites-config) {
  $header: map-get($color-config, 'header');
  $header-hover: map-get($color-config, 'header-hover');
  
  &-heading {
    a {
      @include min-break-point(mobile) {
        font-size: 1.1em;
        line-height: 1.9em;
      }

      color: map-get($header, 'color');
      background: map-get($header, 'background');
      text-decoration: none;
      line-height: 1.8em;
      padding-left: 0;

      &:hover,
      &:focus {
        color: map-get($header-hover, 'color');
        background: map-get($header-hover, 'background');

        &::before {
          color: map-get($header-hover, 'color');
        }
      }

      &:active {
        color: map-get($header, 'color');
        background: map-get($header, 'background');

        &::before {
          color: map-get($header, 'color');
        }
      }

      &::before {
        display: inline-block;
        font-family: 'FontAwesome';
        content: map-get($sprites-config, 'focus');
        color: map-get($header, 'sprite');
        padding: 0 15px;
      }
    }

    .focus::before {
      content: map-get($sprites-config, 'collapsed');
    }

    .collapsed::before {
      content: map-get($sprites-config, 'focus');
    }
  }
}

@mixin set-accordion-properties($color-config, $sprites-config) {
  @include set-accordion-border-color(map-get($color-config, 'border'));
  @include set-accordion-header-properties($color-config, $sprites-config);
}
