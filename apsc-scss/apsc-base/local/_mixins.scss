/* Mixins */

/* Break Point Mixin */
@mixin min-break-point($point) {
    @if $point == hd {
        @media only screen and (min-width: $break-hd) { @content; }
    }
    @else if $point == desktop {
        @media only screen and (min-width: $break-desktop) { @content; }
    }
    @else if $point == laptop {
        @media only screen and (min-width: $break-laptop) { @content; }
    }
    @else if $point == tablet {
        @media only screen and (min-width: $break-tablet)  { @content; }
    }
    @else if $point == mobile {
        @media only screen and (min-width: $break-mobile)  { @content; }
    }
}

@mixin color-modifiers($property: 'color') {
  @each $name, $hex in $colors-map {
    &-#{$name} {
      #{$property}: $hex;
    }
  }
}

/* Browser Mixin */
@mixin target-firefox {
    @at-root {
      @-moz-document url-prefix() {
        & {
          @content;
        }
      }
    }
  }
  
@mixin target-internet-explorer {
  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
    @content;
  }
}

/* Vendor Mixin */
@mixin vendor-prefix($name, $value) {
  @each $vendor in ('-webkit-', '-moz-', '-ms-', '-o-', '') {
    #{$vendor}#{$name}: #{$value};
  }
}

// Local Mixin for setting button color attributes
@mixin set-btn-attributes($color-background, $color-font, $color-border) {
  color: $color-font;
  background-color: $color-background;
  border-color: $color-border;
}

// Use this mixin
@mixin set-btn-colors($color-background, $color-font, $color-border) {
  @include set-btn-attributes($color-background, $color-font, $color-border);
  
  &:hover, &:focus {
    @include set-btn-attributes($color-font, $color-background, $color-border);
  }
}


